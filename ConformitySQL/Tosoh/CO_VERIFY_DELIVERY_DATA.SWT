prompt Creating PO Move to Stock - Bristow: Transaction Data
prompt Creating PO Move to Stock - Bristow: Field Data
------------------------------------------------------------------------------------------
  -- Scanworks 7: &package
  -- Transaction: CO Verify Delivery
  -- Author:      Allen Byerly
  -- Version:     &version
  -- Date         09/01/2010
  ------------------------------------------------------------------------------------------  
  -- Description:
  -- This Script Creates The Transaction and Field Data forthe PO Move to Stock Transaction.
  -- 1.  Set the Transaction specific variables at the beginning of the script
  -- 2.  Set fields and attributes by creating additional field insert statements.
  -- 3.  Field hierarchy is determined by the order in which insert statements appear.
  --
  -- Implements: Standard Component
  --
  -- Modifications:
  -- 1. Shortage Notifications & Resolving Shortages - The shortage notification resides in the Centura client therefore an action in ScanWorks is required to mimic this process. ScanWorks will also allow the user to resolve shortages based on reservation assumptions defined in the ‘Shortages – Notify & Resolve Section’.
  -- 2. Alternate Parts – Repair Orders will need to change the part number based on the repair being performed.
  -- 3. Modifying Serial numbers – Repair Orders will need to modify the serial number for the part being repaired.
  ------------------------------------------------------------------------------------------
DECLARE

  transaction_                ESI_SW_TRANSACTIONS_TAB.Transaction%TYPE;
  title_                      ESI_SW_TRANSACTIONS_TAB.Title%TYPE;
  description_                ESI_SW_TRANSACTIONS_TAB.Description%TYPE;
  package_                    ESI_SW_TRANSACTIONS_TAB.Package%TYPE;
  api_                        ESI_SW_TRANSACTIONS_TAB.Api%TYPE;
  version_                    ESI_SW_TRANSACTIONS_TAB.Version%TYPE;
  
  hierarchy_                  NUMBER;

BEGIN
  ------------------------------------------------------------------------------------------  
  -- SET TRANSACTION SETTINGS:
  -- Set the various transaction specific settings.
  ------------------------------------------------------------------------------------------
  transaction_ := 'CO Verify Delivery';
  title_       := 'CO Verify Delivery';
  description_ := 'CO Verify Delivery Custom Transaction for IFS';
  package_     := '&package';
  api_         := 'CoVerifyDelivery';
  version_     := '&version';  
  
  ------------------------------------------------------------------------------------------ 
  -- DO NOT MODIFY THIS SECTION
  -- This section is used to automatically perform transaction and field data updates
  ------------------------------------------------------------------------------------------ 
  hierarchy_   := '1';
  
  DELETE FROM ESI_SW_FIELDS_TAB
  WHERE transaction = transaction_;
  
  BEGIN
     INSERT INTO esi_sw_transactions_tab(transaction,
                                         title,
                                         description,
                                         package,
                                         api,
                                         version)
     VALUES (transaction_,
             title_,
             description_,
             package_,
             api_,
             version_);
  EXCEPTION
     WHEN DUP_VAL_ON_INDEX THEN
        UPDATE esi_sw_transactions_tab
        SET transaction = transaction_,
            title = title_,
            description = description_,
            package = package_,
            api = api_,
            version = version_
        WHERE transaction = transaction_;
  END;

  ------------------------------------------------------------------------------------------  
  -- SET FIELD SETTINGS:
  -- Add/Remove individual fields
  -- Set the various field specific settings.
  --
  -- Editable Field Attributes:
  -- TRANSACTION - DO NOT MODIFY - THIS IS SET AT THE BEGINNING OF THE SCRIPT
  -- HIERARCHY - DO NOT MODIFY - THIS IS DETERMINED BY THE ORDER FIELDS APPEAR BELOW
  -- FIELD_ID - UNIQUE IDENTIFIER FOR THE FIELD
  -- ENABLED - DOES THE FIELD APPEAR ON THE SCREEN
  -- CONFIGURABLE - CAN THE FIELD BE AUTO-VALIDATED AND RE-ARRANGED ON THE SCREEN
  -- PROMPT - THE FIELD PROMPT THAT DISPLAYS NEXT TO THE FIELD ON THE SCREEN
  -- LOOKUP TABLE - IF ONFIGURABLE, WHAT TABLE IS QUERIED WHEN VALIDATING THIS FIELDS VALUES
  -- FIELD NAME - IF CONFIGURABLE, WHAT FIELD IN A TABLE RERESENTS THIS FIELDS VALUES
  -- DEFAULT VALUE - WHAT IS THE DEFAULT VALUE FOR THIS FIELD ON THE SCREEN
  -- MAX LENGTH - WHAT IS THE MAXIMUM LENGTH OF THIS FIELDS VALUE (DEFAULT 100)
  -- READ_ONLY - IS THIS FIELD ALWAYS READ ONLY
  -- UPPERCASE - IS THIS FIELDS VALUES TO BE ONLY UPPERCASE
  -- HAS UOM - DOES THISFIELD HAVE A UOM ASSOCIATED WITH IT
  -- LOV OVERRIDE QUERY - LOV QUERY THAT CAN BE USED TO MANUALLY OVERRIDE DEFAULTS 
  -- LOV PROMPT - THE PROMPT THAT SHOULD DISPLAY FOR THE FIELD INSIDE EACH LOV
  -- LOV ON ENTRY - SHOULD THE LOV DISPLAY ON ENTRY OF THIS FIELD
  -- LOV READ ONLY - DOES THE LOV RETURN DATA OR ONLY DISPLAY VALUES
  ------------------------------------------------------------------------------------------

  --DELNOTE_NO
  INSERT INTO esi_sw_fields_tab
  VALUES (transaction_,
          hierarchy_,
          'DELNOTE_NO',--FIELD_ID
          'Y',--ENABLED
          'Y',--CONFIGURABLE
          'Delivery Note',--PROMPT
          'ESI_SW_DELIVERY',--LOOKUP TABLE
          'DELNOTE_NO',--FIELD NAME
          '',--DEFAULT VALUE
          '',--MAX LENGTH
          'N',--READ_ONLY
          'Y',--UPPERCASE
          'N',--HAS UOM
          '',--LOV OVERRIDE QUERY
          'Del Note ID',--LOV PROMPT
          'N',--LOV ON ENTRY
          'N',--LOV READ ONLY
          SYSDATE);
   
   hierarchy_    := hierarchy_ + 1;
   
   --SERIAL_NO
  INSERT INTO esi_sw_fields_tab
  VALUES (transaction_,
          hierarchy_,
          'SERIAL_NO',--FIELD_ID
          'Y',--ENABLED
          'Y',--CONFIGURABLE
          'Serial',--PROMPT
          'ESI_SW_DELIVERY',--LOOKUP TABLE
          'SERIAL_NO',--FIELD NAME
          '',--DEFAULT VALUE
          '',--MAX LENGTH
          'N',--READ_ONLY
          'Y',--UPPERCASE
          'N',--HAS UOM
          '',--LOV OVERRIDE QUERY
          'Serial',--LOV PROMPT
          'N',--LOV ON ENTRY
          'N',--LOV READ ONLY
          SYSDATE);
   
   hierarchy_    := hierarchy_ + 1;
   
   --LOT_BATCH_NO
  INSERT INTO esi_sw_fields_tab
  VALUES (transaction_,
          hierarchy_,
          'LOT_BATCH_NO',--FIELD_ID
          'Y',--ENABLED
          'Y',--CONFIGURABLE
          'Lot',--PROMPT
          'ESI_SW_DELIVERY',--LOOKUP TABLE
          'LOT_BATCH_NO',--FIELD NAME
          '',--DEFAULT VALUE
          '',--MAX LENGTH
          'N',--READ_ONLY
          'Y',--UPPERCASE
          'N',--HAS UOM
          '',--LOV OVERRIDE QUERY
          'Lot',--LOV PROMPT
          'N',--LOV ON ENTRY
          'N',--LOV READ ONLY
          SYSDATE);
   
   hierarchy_    := hierarchy_ + 1;

   --PART_NO
  INSERT INTO esi_sw_fields_tab
  VALUES (transaction_,
          hierarchy_,
          'PART_NO',--FIELD_ID
          'Y',--ENABLED
          'Y',--CONFIGURABLE
          'Part',--PROMPT
          'ESI_SW_DELIVERY',--LOOKUP TABLE
          'PART_NO',--FIELD NAME
          '',--DEFAULT VALUE
          '',--MAX LENGTH
          'N',--READ_ONLY
          'Y',--UPPERCASE
          'N',--HAS UOM
          '',--LOV OVERRIDE QUERY
          'Part',--LOV PROMPT
          'N',--LOV ON ENTRY
          'N',--LOV READ ONLY
          SYSDATE);
   
   hierarchy_    := hierarchy_ + 1;
   
   --DESCRIPTION
  INSERT INTO esi_sw_fields_tab
  VALUES (transaction_,
          hierarchy_,
          'DESCRIPTION',--FIELD_ID
          'Y',--ENABLED
          'N',--CONFIGURABLE
          '',--PROMPT
          'ESI_SW_DELIVERY',--LOOKUP TABLE
          'DESCRIPTION',--FIELD NAME
          '',--DEFAULT VALUE
          '',--MAX LENGTH
          'Y',--READ_ONLY
          'Y',--UPPERCASE
          'N',--HAS UOM
          '',--LOV OVERRIDE QUERY
          'Desc',--LOV PROMPT
          'N',--LOV ON ENTRY
          'N',--LOV READ ONLY
          SYSDATE);
   
   hierarchy_    := hierarchy_ + 1;


   --QTY_SHIPPED
  INSERT INTO esi_sw_fields_tab
  VALUES (transaction_,
          hierarchy_,
          'QTY_SHIPPED',--FIELD_ID
          'Y',--ENABLED
          'Y',--CONFIGURABLE
          'Qty Shipped',--PROMPT
          'ESI_SW_DELIVERY',--LOOKUP TABLE
          'QTY_SHIPPED',--FIELD NAME
          '',--DEFAULT VALUE
          '',--MAX LENGTH
          'N',--READ_ONLY
          'Y',--UPPERCASE
          'Y',--HAS UOM
          '',--LOV OVERRIDE QUERY
          'Qty Shipped',--LOV PROMPT
          'N',--LOV ON ENTRY
          'N',--LOV READ ONLY
          SYSDATE);
   
   hierarchy_    := hierarchy_ + 1;

   --STATUS
  INSERT INTO esi_sw_fields_tab
  VALUES (transaction_,
          hierarchy_,
          'STATUS',--FIELD_ID
          'Y',--ENABLED
          'Y',--CONFIGURABLE
          'Status',--PROMPT
          'STATUS',--LOOKUP TABLE
          'STATUS',--FIELD NAME
          '',--DEFAULT VALUE
          '',--MAX LENGTH
          'Y',--READ_ONLY
          'Y',--UPPERCASE
          'N',--HAS UOM
          '',--LOV OVERRIDE QUERY
          'Status',--LOV PROMPT
          'N',--LOV ON ENTRY
          'N',--LOV READ ONLY
          SYSDATE);
   
   hierarchy_    := hierarchy_ + 1;


COMMIT;
END;
/